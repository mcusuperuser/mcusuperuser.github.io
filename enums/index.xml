<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Enumerations on Embedded C for Arm Cortex-M Microcontrollers</title>
    <link>https://mcusuperuser.github.io/enums/</link>
    <description>Recent content in Enumerations on Embedded C for Arm Cortex-M Microcontrollers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://mcusuperuser.github.io/enums/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Enumeration declaration</title>
      <link>https://mcusuperuser.github.io/enums/declaration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mcusuperuser.github.io/enums/declaration/</guid>
      <description>Enumerations:
 Are unique integer data types May only contain a specified list of values Values are specified as symbolic constants  Syntax
enum typeName { label0, label1, ..., labeln } The compiler sets label0 = 0, label1 = 1, labeln = n.
Code example
enum month {JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC}; You can assign a specific value to any label.</description>
    </item>
    
    <item>
      <title>Declaration of enumeration type variable</title>
      <link>https://mcusuperuser.github.io/enums/declarationtypevar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mcusuperuser.github.io/enums/declarationtypevar/</guid>
      <description>Declared along with type
enum typeName { list_of_constants } variable_name1, ...; Declared independently
enum typeName variable_name1, ...; Code example
enum month {JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC} current_month; enum month current_month; </description>
    </item>
    
    <item>
      <title>Tagless enumeration variable</title>
      <link>https://mcusuperuser.github.io/enums/tagless/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mcusuperuser.github.io/enums/tagless/</guid>
      <description>If you omit the tape name, you can only have variables of that type that are specified as part of the enum declaration. Later, you cannot specify any additional variable of the enum type.
Code example
enum {JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC} current_month; </description>
    </item>
    
    <item>
      <title>Declare an enumeration type with `typedef`</title>
      <link>https://mcusuperuser.github.io/enums/typedef/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mcusuperuser.github.io/enums/typedef/</guid>
      <description>As always, variables can be declared as type typeName without requiring the keyword enum:
Syntax
typedef enum {list_of_constants} typeName; The enumeration can now be used as an ordinary data type, such as int or float.
Code example
typedef enum {JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC} month; month current_month; // Variable of type month </description>
    </item>
    
    <item>
      <title>Using an enumeration type variable</title>
      <link>https://mcusuperuser.github.io/enums/using/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mcusuperuser.github.io/enums/using/</guid>
      <description>If the enumeration and the variable have already been defined:
Syntax
varName = labeln; Use the labels just like any other symbolic constant.
Enumeration type variables must only use the typeâ€™s labels or equivalent integer.
Code example
enum color {red, green, blue}; enum color myCar; myCar = red; myCar = 3; if (myCar == 2) { // do something } </description>
    </item>
    
  </channel>
</rss>
